{"version":3,"file":"bundle.umd.cjs","sources":["../../templates/components/common/description.js","../../templates/components/common/validator.js","../../templates/components/common/wrapper.js","../../templates/const.js","../../templates/utils.js","../../templates/components/eel-utils/filebrowser.js","../../templates/components/params/params.js","../../templates/components/publishers/publishers.js","../../templates/components/subscribers/subscribers.js","../../templates/dom-helper.js","../../templates/unload.js"],"sourcesContent":["/**\n * DescriptionFieldへのテキスト表示用イベントリスナー\n **/\n\n// CSVファイルのキャッシュ\nglobalThis.jsonCache = {};\n\nasync function loadJsonFile(filepath) {\n  var filename = filepath.replace(\".csv\", \"\");\n\n  if (jsonCache[filename]) {\n    return jsonCache[filename];\n  }\n\n  try {\n    const res = await fetch(`/${filename}.json`);\n    const data = await res.json();\n    jsonCache[filename] = data;\n    return data;\n  } catch (e) {\n    console.error(\"Error loading JSON:\", e);\n    return null;\n  }\n}\n\nasync function updateDescription(payload) {\n  const { element, detail } = payload;\n  if (!detail) {\n    return;\n  }\n  const { rowId, csvFilename } = detail;\n  console.log(\"updateDescription\", detail);\n  if (!rowId) {\n    return;\n  }\n  if (!csvFilename) {\n    return;\n  }\n\n  const jsonData = await loadJsonFile(csvFilename);\n  if (!jsonData) {\n    console.error(\n      \"No description available: CSV file not found. This is caused by missing CSV file, failed to convert to JSON, or failed to load from cache.\"\n    );\n    return;\n  }\n\n  const rowData = jsonData.find((row) => row.id === rowId);\n  if (!rowData) {\n    console.error(\"No description available: Row not found\");\n    return;\n  }\n\n  // テキスト更新\n  // クラス名にdescription-fieldが指定されている要素を取得してテキストを更新する\n  const fields = element.querySelectorAll(\".description-field\");\n  fields.forEach((field) => {\n    field.textContent = rowData[field.dataset.columnName];\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  var elements = document.getElementsByClassName(\"description\");\n  for (const el of elements) {\n    domUpdateHelper.registerCallback(el, updateDescription);\n\n    const eventName = el.dataset.eventName;\n    document.addEventListener(eventName, (event) => {\n      const payload = {\n        detail: event.detail,\n      };\n      domUpdateHelper.executeCallbacks(el, payload);\n    });\n  }\n});","/**\n * Validatorラッパー\n */\nfunction initValidator(inputElement, errorFieldElement) {\n  const name = inputElement.name;\n  const schema = global.schemas[name];\n  console.log(name, schema);\n  if (!schema) {\n    console.error(`No schema found for ${name}`);\n    return;\n  }\n  inputElement.addEventListener(\"input\", (event) => {\n    console.log(event);\n    const value = event.target.value;\n    const result = validate(value, schema);\n    if (result.valid) {\n      event.target.classList.remove(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = \"\";\n      }\n    } else {\n      event.target.classList.add(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = result.message;\n      }\n    }\n  });\n}\n\nfunction validate(value, schema) {\n  try {\n    schema.parse(value);\n    const result = {\n      valid: true,\n      message: \"\",\n    };\n    return result;\n  } catch (e) {\n    const errorMessage = error.errors[0]?.message || \"入力が無効です\";\n    const result = {\n      valid: false,\n      message: errorMessage,\n    };\n    return result;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  var elements = document.getElementsByClassName(\"validator-wrapper\");\n  for (const el of elements) {\n    // validator-wrapperはdivタグなので、このdivタグの子要素のinputタグを取得する\n    const inputElement = el.querySelector(\"input\");\n    // エラー表示フィールドがあれば、そこにバリデーションエラーメッセージを表示する\n    const errorFieldElement = el.querySelector(\".validation-error\");\n    if (!inputElement) {\n      console.error(\"No input element found in validator-wrapper\", el);\n      continue;\n    }\n    initValidator(inputElement, errorFieldElement);\n  }\n});","/**\n * イベントディスパッチャー追加のためのラッパーコンポーネント用関数\n */\n\nfunction dispatchWrappedEvent(originalEvent, customEventName) {\n  const currentTarget = originalEvent.currentTarget;\n\n  // 現在のターゲットから最も近い非event-wrapper要素を見つける関数\n  function findClosestNonWrapper(element) {\n    // 要素自体がevent-wrapperでない場合はその要素を返す\n    if (!element.classList.contains('event-wrapper')) {\n      return element;\n    }\n    // 子要素を走査\n    for (const child of element.children) {\n      const result = findClosestNonWrapper(child);\n      if (result) return result;\n    }\n    return null;\n  }\n  const wrappedElement = findClosestNonWrapper(currentTarget);\n  if (!wrappedElement) return;\n\n  const detail = { ...wrappedElement.dataset };\n  const customEvent = new CustomEvent(customEventName, {\n    bubbles: true,\n    detail,\n  });\n  document.dispatchEvent(customEvent);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const clickWrappers = document.getElementsByClassName(\"click-wrapper\");\n  for(const wrapper of clickWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"click\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n  const hoverWrappers = document.getElementsByClassName(\"hover-wrapper\");\n  for(const wrapper of hoverWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"mouseover\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n  const leaveWrappers = document.getElementsByClassName(\"leave-wrapper\");\n  for(const wrapper of leaveWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"mouseout\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n});","globalThis.PARAM_TYPES = {\n  Bool: \"Bool\",\n  Number: \"Number\",\n  String: \"String\",\n  Object: \"Object\",\n  Array: \"Array\",\n}\n","/**\n * デスクトップアプリ用途なのでEval警告を無視する\n */\n\nglobalThis.Utils = {\n  EvalGetValue: function(value, key) {\n    let v;\n    eval(\"v = value\" + key);\n    return v;\n  },\n  EvalSetValue: function(value, key, newValue) {\n    let v = structuredClone(value);\n    eval(\"v\" + key + \" = newValue\");\n    return v;\n  },\n  /**\n   * 辞書キーのフルパス指定して値追加\n   * @param {*} dict \n   * @param {*} key: .options.data.meta[0] のようなフルパス\n   * @param {*} value \n   * @returns dict\n   */\n  dictFullPathAdd: function(dict, key_fullpath, value) {\n    let result = structuredClone(dict);\n    let current = result;\n    // 一番最初の.は無視\n    if (key_fullpath.startsWith('.')) {\n      key_fullpath = key_fullpath.slice(1);\n    }\n\n    // パスを分割して階層構造を作成\n    const pathParts = key_fullpath.split('.');\n\n    pathParts.forEach((part, index) => {\n      // 配列のインデックスを処理\n      const arrayMatch = part.match(/(\\w+)\\[(\\d+)\\]/);\n\n      if (arrayMatch) {\n        // 配列の場合\n        const [_, arrayName, arrayIndex] = arrayMatch;\n        if (!current[arrayName]) {\n          current[arrayName] = [];\n        }\n\n        if (index === pathParts.length - 1) {\n          // 最後の要素の場合は値を設定\n          current[arrayName][arrayIndex] = value;\n        } else {\n          // 途中の要素の場合は空オブジェクトを作成\n          if (!current[arrayName][arrayIndex]) {\n            current[arrayName][arrayIndex] = {};\n          }\n          current = current[arrayName][arrayIndex];\n        }\n      } else {\n        // 通常のオブジェクトの場合\n        if (index === pathParts.length - 1) {\n          // 最後の要素の場合は値を設定\n          current[part] = value;\n        } else {\n          // 途中の要素の場合は空オブジェクトを作成\n          if (!current[part]) {\n            current[part] = {};\n          }\n          current = current[part];\n        }\n      }\n    });\n\n    return result;\n  }\n}","document.addEventListener(\"DOMContentLoaded\", (event) => {\n  var elements = document.getElementsByClassName(\"filebrowser\");\n  for (const el of elements) {\n    /** HTMLタグバリデータ */\n    const buttonElement = el.querySelector(\"button\");\n    const inputElement = el.querySelector(\"input\");\n    console.assert(buttonElement, \"FileBrowserはbuttonタグを含む必要があります\");\n    console.assert(inputElement, \"FileBrowserはinputタグを含む必要があります\");\n    buttonElement.addEventListener(\"click\", async (event) => {\n      const filepath = await eel.open_filebrowser()();\n      inputElement.value = filepath;\n    });\n  }\n});","/**\n * ROS Parameters\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROSPARAMの必須属性\n   * - class=\"rosparam\"\n   * - name=\"[/param_name]\"\n   * - data-rtype=\"[PARAM_TYPES]\"\n   */\n  const paramElements = document.getElementsByClassName(\"rosparam\");\n  for (const element of paramElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(element.getAttribute(\"name\") !== null, \"Parameterのname属性が必要です.\");\n    const name = element.getAttribute(\"name\");\n\n    /**\n     * ROSParamのポーリング登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Param, {\n      detail: { name },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なコールバックが必要な場合は、update-custom属性を設定する\n      continue;\n    }\n\n    // rosparamのデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n\n\n    /** ROSPARAM SETTER */\n    if (element.tagName === \"DIV\") {\n      const inputs = element.querySelectorAll(\"input\");\n      for (const input of inputs) {\n        input.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const key = e.currentTarget.getAttribute(\"data-key\");\n          const obj = await ROSInterface.getParam(name);\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Object,\n              value: Utils.EvalSetValue(obj, key, value)\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n\n    if (element.tagName === \"SELECT\") {\n      element.addEventListener(\"change\", async (e) => {\n        const value = e.currentTarget.value;\n        const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n          detail: {\n            name,\n            type: PARAM_TYPES.Number,\n            value\n          },\n        });\n        document.dispatchEvent(event);\n      });\n    }\n\n    if (element.tagName === \"INPUT\") {\n      if (element.type === \"checkbox\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.checked;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Bool,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"radio\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"text\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.String,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      } else {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.ParamUpdated, async (e) => {\n    const { name, value } = e.detail;\n\n    const paramElements = document.querySelectorAll(`[name=\"${name}\"][class=\"rosparam\"]`); \n    for(var i = 0; i < paramElements.length; i++) {\n      domUpdateHelper.executeCallbacks(paramElements[i], { value });\n    }\n  });\n});","/**\n * ROS PUBLISHER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Publisherの必須属性\n   * - class=\"publish\"\n   * - name=\"[/topic_name]\"\n   * - ext=\"ROS_MESSAGE\"\n   * - value=\"[value]\"\n   */\n  const publishes = document.getElementsByClassName(\"publish\");\n  for (const pub of publishes) {\n    /**\n     * HTMLタグバリデータ\n     */\n    const name = pub.getAttribute(\"name\");\n    console.assert(name, \"Publisherのname属性が必要です\");\n    const type = pub.getAttribute(\"m-type\");\n    console.assert(type, `Publisherのext属性が必要です`);\n    console.assert(pub.tagName === \"DIV\", \"PublisherはDIVタグである必要があります\");\n    if (pub.tagName !== \"DIV\") {\n      continue;\n    }\n    const btn = pub.querySelector(\"button\");\n    console.assert(btn, \"Publisherはbuttonタグを含む必要があります\");\n    const inputs = pub.querySelectorAll(\"input\");\n    console.assert(inputs.length > 0, \"Publisherはinputタグを含む必要があります\");\n\n\n    btn.addEventListener(\"click\", async (e) => {\n      let value = {};\n      // inputタグのvalueを取得して辞書化\n      inputs.forEach((input) => {\n        const ext = input.getAttribute(\"ext\");\n        if (!ext) return;\n        var type_asserted;\n        if(input.type == \"checkbox\"){\n          type_asserted = input.checked;\n        } else if(input.type == \"number\"){\n          type_asserted = Number(input.value);\n        } else if(input.type == \"radio\"){\n          type_asserted = Number(input.value);\n        } else {\n          type_asserted = input.value;\n        }\n        value = Utils.dictFullPathAdd(value, ext, type_asserted);\n      });\n      const event = new CustomEvent(ROS_EVENTS.Publish, {\n        detail: { name, type, value },\n      });\n      document.dispatchEvent(event);\n    });\n  }\n});","/**\n * ROS SUBSCRIBER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Subscriberの必須属性\n   *  - class=\"subscribe\"\n   *  - name=\"[/topic_name]\"\n   *  - data-rtype=\"[MSG_TYPES]\"\n   */\n  const subscribeElements = document.getElementsByClassName(\"subscribe\");\n  for (const element of subscribeElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    const name = element.getAttribute(\"name\");\n    console.assert(name, \"Subscriberのname属性が必要です.\");\n    const type = element.getAttribute(\"m-type\");\n    console.assert(type, \"Subscriberのm-type属性が必要です.\");\n    console.assert(element.tagName === \"DIV\", \"SubscriberはDIVタグである必要があります.\");\n    if (element.tagName !== \"DIV\") {\n      continue;\n    }\n\n    /**\n     * SubscriberをROSに登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Subscribe, {\n      detail: { name, type },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なDOM更新処理が必要な場合は、data-update-custom属性を設定する\n      continue;\n    }\n\n    // Subscribeしたデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.SubscribedValue, async (e) => {\n    const { name, value } = e.detail;\n    const topicElements = document.querySelectorAll(`[name=\"${name}\"][class=\"subscribe\"]`); \n    for(var i = 0; i < topicElements.length; i++) {\n      domUpdateHelper.executeCallbacks(topicElements[i], { value });\n    };\n  });\n});","class DOMUpdateHelper {\n  static updateCallbacks = new WeakMap();\n\n  /**\n   * DOM更新コールバックの登録\n   * @param {*} element\n   * @param {*} callback: ({ element, ...payload }) => { ... }\n   */\n  static registerCallback(element, callback) {\n    if (DOMUpdateHelper.updateCallbacks.has(element)) {\n      DOMUpdateHelper.updateCallbacks.get(element).push(callback);\n    } else {\n      DOMUpdateHelper.updateCallbacks.set(element, [callback]);\n    }\n  }\n\n  /**\n   * DOM更新コールバックの実行\n   * @param {*} element\n   * @param {*} payload\n   */\n  static executeCallbacks(element, payload) {\n    if (DOMUpdateHelper.updateCallbacks.has(element)) {\n      DOMUpdateHelper.updateCallbacks.get(element).forEach((callback) => {\n        callback({ element, ...payload });\n      });\n    }\n  }\n\n  /**\n   * DOM更新コールバック\n   * @param {*} payload\n   */\n  static updateElement(payload) {\n    const { element, value } = payload;\n    switch (element.tagName) {\n      case \"DIV\":\n        DOMUpdateHelper.updateDivElement(element, value);\n        break;\n      case \"SELECT\":\n        DOMUpdateHelper.updateSelectElement(element, value);\n        break;\n      case \"INPUT\":\n        DOMUpdateHelper.updateInputElement(element, value);\n        break;\n      case \"IMG\":\n        DOMUpdateHelper.updateImageElement(element, value);\n        break;\n      default:\n        throw new Error(`Unsupported element tag: ${element.tagName}`);\n    }\n  }\n\n  static updateDivElement(element, value) {\n    element.setAttribute(\"data-value\", value);\n\n    const children = element.children;\n    for (const child of children) {\n      // ext属性を持つ子要素のみ再帰探索\n      if (!child.hasAttribute(\"ext\")) continue;\n      DOMUpdateHelper.updateElement({\n        element: child,\n        value: Utils.EvalGetValue(value, child.getAttribute(\"ext\"))\n      });\n    }\n  }\n\n  static updateInputElement(element, value) {\n    if (element.type === \"checkbox\") {\n      element.checked = value;\n      return;\n    }\n    if (element.type === \"radio\") {\n      element.checked = element.value === value;\n      return;\n    }\n    element.value = value;\n    return;\n  }\n\n  static updateSelectElement(element, value) {\n    const options = element.querySelectorAll(\"option\");\n    for (let i = 0; i < options.length; i++) {\n      options[i].selected = options[i].value === value;\n    }\n  }\n\n  static updateImageElement(element, value) {\n    element.src = value;\n  }\n}\nglobalThis.domUpdateHelper = DOMUpdateHelper;","/**\n * Unregister all ros pub/sub/params on unload page.\n **/\nwindow.addEventListener(\"unload\", async (e) => {\n  for (const element of publishButtons) {\n    eel.ros_unpublish(element.getAttribute(\"name\"));\n  }\n  for (const element of subscribeElements) {\n    eel.ros_unsubscribe(element.getAttribute(\"name\"));\n  }\n  for (const element of paramElements) {\n    eel.ros_unregister_param(element.getAttribute(\"name\"));\n  }\n});"],"names":["async","loadJsonFile","filepath","filename","replace","jsonCache","res","fetch","data","json","e","console","error","updateDescription","payload","element","detail","rowId","csvFilename","log","jsonData","rowData","find","row","id","querySelectorAll","forEach","field","textContent","dataset","columnName","initValidator","inputElement","errorFieldElement","name","schema","global","schemas","addEventListener","event","value","result","validate","target","valid","classList","remove","add","message","parse","_a","errors","dispatchWrappedEvent","originalEvent","customEventName","wrappedElement","findClosestNonWrapper","contains","child","children","currentTarget","customEvent","CustomEvent","bubbles","document","dispatchEvent","globalThis","PARAM_TYPES","Bool","Number","String","Object","Array","Utils","EvalGetValue","key","v","eval","EvalSetValue","newValue","structuredClone","dictFullPathAdd","dict","key_fullpath","current","startsWith","slice","pathParts","split","part","index","arrayMatch","match","_","arrayName","arrayIndex","length","elements","getElementsByClassName","el","domUpdateHelper","registerCallback","eventName","executeCallbacks","querySelector","clickWrappers","wrapper","hoverWrappers","leaveWrappers","buttonElement","assert","eel","open_filebrowser","paramElements","getAttribute","ROS_EVENTS","Param","hasAttribute","updateElement","tagName","inputs","input","obj","ROSInterface","getParam","ParamSet","type","checked","ParamUpdated","i","publishes","pub","btn","ext","type_asserted","Publish","subscribeElements","Subscribe","SubscribedValue","topicElements","_DOMUpdateHelper","callback","updateCallbacks","has","get","push","set","updateDivElement","updateSelectElement","updateInputElement","updateImageElement","Error","setAttribute","options","selected","src","__publicField","WeakMap","DOMUpdateHelper","window","publishButtons","ros_unpublish","ros_unsubscribe","ros_unregister_param"],"mappings":"+SAOAA,eAAeC,aAAaC,GAC1B,IAAIC,EAAWD,EAASE,QAAQ,OAAQ,IAEpC,GAAAC,UAAUF,GACZ,OAAOE,UAAUF,GAGf,IACF,MAAMG,QAAYC,MAAM,IAAIJ,UACtBK,QAAaF,EAAIG,OAEhB,OADPJ,UAAUF,GAAYK,EACfA,CACR,OAAQE,GAEA,OADCC,QAAAC,MAAM,sBAAuBF,GAC9B,IACX,CACA,CAEAV,eAAea,kBAAkBC,GACzB,MAAAC,QAAEA,EAASC,OAAAA,GAAWF,EAC5B,IAAKE,EACH,OAEI,MAAAC,MAAEA,EAAOC,YAAAA,GAAgBF,EAE/B,GADQL,QAAAQ,IAAI,oBAAqBH,IAC5BC,EACH,OAEF,IAAKC,EACH,OAGI,MAAAE,QAAiBnB,aAAaiB,GACpC,IAAKE,EAIH,YAHQT,QAAAC,MACN,8IAKJ,MAAMS,EAAUD,EAASE,MAAMC,GAAQA,EAAIC,KAAOP,IAClD,IAAKI,EAEH,YADAV,QAAQC,MAAM,2CAMDG,EAAQU,iBAAiB,sBACjCC,SAASC,IACdA,EAAMC,YAAcP,EAAQM,EAAME,QAAQC,WAAU,GAExD,CCxDS,SAAAC,cAAcC,EAAcC,GACnC,MAAMC,EAAOF,EAAaE,KACpBC,EAASC,OAAOC,QAAQH,GACtBvB,QAAAQ,IAAIe,EAAMC,GACbA,EAIQH,EAAAM,iBAAiB,SAAUC,IACtC5B,QAAQQ,IAAIoB,GACNC,MACAC,EAASC,SADDH,EAAMI,OAAOH,MACIL,GAC3BM,EAAOG,OACHL,EAAAI,OAAOE,UAAUC,OAAO,WAC1Bb,IACFA,EAAkBL,YAAc,MAG5BW,EAAAI,OAAOE,UAAUE,IAAI,WACvBd,IACFA,EAAkBL,YAAca,EAAOO,SAE/C,IAjBYrC,QAAAC,MAAM,uBAAuBsB,IAmBzC,CAES,SAAAQ,SAASF,EAAOL,SACnB,IACFA,EAAOc,MAAMT,GAKN,MAJQ,CACbI,OAAO,EACPI,QAAS,GAGZ,OAAQtC,GAMA,MAJQ,CACbkC,OAAO,EACPI,SAHmB,OAAAE,EAAMtC,MAAAuC,OAAO,aAAIH,UAAW,UAMrD,CACA,CCzCS,SAAAI,qBAAqBC,EAAeC,GAgBrC,MAAAC,EAZN,SAASC,EAAsBzC,GAE7B,IAAKA,EAAQ8B,UAAUY,SAAS,iBACvB,OAAA1C,EAGE,IAAA,MAAA2C,KAAS3C,EAAQ4C,SAAU,CAC9B,MAAAlB,EAASe,EAAsBE,GACrC,GAAIjB,EAAe,OAAAA,CACzB,CACW,OAAA,IACX,CACyBe,CAfDH,EAAcO,eAgBpC,IAAKL,EAAgB,OAErB,MAAMvC,EAAS,IAAKuC,EAAe1B,SAC7BgC,EAAc,IAAIC,YAAYR,EAAiB,CACnDS,SAAS,EACT/C,WAEFgD,SAASC,cAAcJ,EACzB,CC7BAK,WAAWC,YAAc,CACvBC,KAAM,OACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SCDTN,WAAWO,MAAQ,CACjBC,aAAc,SAASlC,MAAOmC,KACxB,IAAAC,EAEG,OADPC,KAAK,YAAcF,KACZC,CACR,EACDE,aAAc,SAAStC,MAAOmC,IAAKI,UAC7B,IAAAH,EAAII,gBAAgBxC,OAEjB,OADFqC,KAAA,IAAMF,IAAM,eACVC,CACR,EAQDK,gBAAiB,SAASC,EAAMC,EAAc3C,GACxC,IAAAC,EAASuC,gBAAgBE,GACzBE,EAAU3C,EAEV0C,EAAaE,WAAW,OACXF,EAAAA,EAAaG,MAAM,IAI9B,MAAAC,EAAYJ,EAAaK,MAAM,KAsC9B,OApCGD,EAAA7D,SAAQ,CAAC+D,EAAMC,KAEjB,MAAAC,EAAaF,EAAKG,MAAM,kBAE9B,GAAID,EAAY,CAEd,MAAOE,EAAGC,EAAWC,GAAcJ,EAC9BP,EAAQU,KACHV,EAAAU,GAAa,IAGnBJ,IAAUH,EAAUS,OAAS,EAEvBZ,EAAAU,GAAWC,GAAcvD,GAG5B4C,EAAQU,GAAWC,KACtBX,EAAQU,GAAWC,GAAc,CAAE,GAE3BX,EAAAA,EAAQU,GAAWC,GAEvC,MAEYL,IAAUH,EAAUS,OAAS,EAE/BZ,EAAQK,GAAQjD,GAGX4C,EAAQK,KACHL,EAAAK,GAAQ,CAAE,GAEpBL,EAAUA,EAAQK,GAE5B,IAGWhD,CACX,GJjEAyB,WAAW7D,UAAY,CAAE,EAwDhB2D,SAAA1B,iBAAiB,oBAAqB5B,IACzC,IAAAuF,EAAWjC,SAASkC,uBAAuB,eAC/C,IAAA,MAAWC,KAAMF,EAAU,CACTG,gBAAAC,iBAAiBF,EAAItF,mBAE/B,MAAAyF,EAAYH,EAAGtE,QAAQyE,UACpBtC,SAAA1B,iBAAiBgE,GAAY/D,IACpC,MAAMzB,EAAU,CACdE,OAAQuB,EAAMvB,QAEAoF,gBAAAG,iBAAiBJ,EAAIrF,EAAO,GAElD,KC1BSkD,SAAA1B,iBAAiB,oBAAqBC,IACzC,IAAA0D,EAAWjC,SAASkC,uBAAuB,qBAC/C,IAAA,MAAWC,KAAMF,EAAU,CAEnB,MAAAjE,EAAemE,EAAGK,cAAc,SAEhCvE,EAAoBkE,EAAGK,cAAc,qBACtCxE,EAILD,cAAcC,EAAcC,GAHlBtB,QAAAC,MAAM,8CAA+CuF,EAInE,KC5BSnC,SAAA1B,iBAAiB,oBAAoB,KACtC,MAAAmE,EAAgBzC,SAASkC,uBAAuB,iBACtD,IAAA,MAAUQ,KAAWD,EAAe,CAC5B,MAAAH,EAAYI,EAAQ7E,QAAQyE,UAClCI,EAAQpE,iBAAiB,SAAU5B,GAAM0C,qBAAqB1C,EAAG4F,IACrE,CACQ,MAAAK,EAAgB3C,SAASkC,uBAAuB,iBACtD,IAAA,MAAUQ,KAAWC,EAAe,CAC5B,MAAAL,EAAYI,EAAQ7E,QAAQyE,UAClCI,EAAQpE,iBAAiB,aAAc5B,GAAM0C,qBAAqB1C,EAAG4F,IACzE,CACQ,MAAAM,EAAgB5C,SAASkC,uBAAuB,iBACtD,IAAA,MAAUQ,KAAWE,EAAe,CAC5B,MAAAN,EAAYI,EAAQ7E,QAAQyE,UAClCI,EAAQpE,iBAAiB,YAAa5B,GAAM0C,qBAAqB1C,EAAG4F,IACxE,KG9CStC,SAAA1B,iBAAiB,oBAAqBC,IACzC,IAAA0D,EAAWjC,SAASkC,uBAAuB,eAC/C,IAAA,MAAWC,KAAMF,EAAU,CAEnB,MAAAY,EAAgBV,EAAGK,cAAc,UACjCxE,EAAemE,EAAGK,cAAc,SAC9B7F,QAAAmG,OAAOD,EAAe,kCACtBlG,QAAAmG,OAAO9E,EAAc,iCACf6E,EAAAvE,iBAAiB,SAAStC,MAAOuC,IAC7C,MAAMrC,QAAiB6G,IAAIC,kBAAJD,GACvB/E,EAAaQ,MAAQtC,CAAA,GAE3B,KCTS8D,SAAA1B,iBAAiB,oBAAoBtC,UAOtCiH,MAAAA,EAAgBjD,SAASkC,uBAAuB,YACtD,IAAA,MAAWnF,KAAWkG,EAAe,CAInCtG,QAAQmG,OAAwC,OAAjC/F,EAAQmG,aAAa,QAAkB,0BAChD,MAAAhF,EAAOnB,EAAQmG,aAAa,QAK5B3E,EAAQ,IAAIuB,YAAYqD,WAAWC,MAAO,CAC9CpG,OAAQ,CAAEkB,UAOR,GALJ8B,SAASC,cAAc1B,IAKnBxB,EAAQsG,aAAa,iBAArB,CAUA,GAJYjB,gBAAAC,iBAAiBtF,EAASqF,gBAAgBkB,eAIlC,QAApBvG,EAAQwG,QAAmB,CACvB,MAAAC,EAASzG,EAAQU,iBAAiB,SACxC,IAAA,MAAWgG,KAASD,EACZC,EAAAnF,iBAAiB,UAAUtC,MAAOU,IAChC8B,MAAAA,EAAQ9B,EAAEkD,cAAcpB,MACxBmC,EAAMjE,EAAEkD,cAAcsD,aAAa,YACnCQ,QAAYC,aAAaC,SAAS1F,GAClCK,EAAQ,IAAIuB,YAAYqD,WAAWU,SAAU,CACjD7G,OAAQ,CACNkB,OACA4F,KAAM3D,YAAYI,OAClB/B,MAAOiC,MAAMK,aAAa4C,EAAK/C,EAAKnC,MAGxCwB,SAASC,cAAc1B,EAAK,GAGtC,CAE4B,WAApBxB,EAAQwG,SACFxG,EAAAuB,iBAAiB,UAAUtC,MAAOU,IAClC8B,MAAAA,EAAQ9B,EAAEkD,cAAcpB,MACxBD,EAAQ,IAAIuB,YAAYqD,WAAWU,SAAU,CACjD7G,OAAQ,CACNkB,OACA4F,KAAM3D,YAAYE,OAClB7B,MAAAA,KAGJwB,SAASC,cAAc1B,EAAK,IAIR,UAApBxB,EAAQwG,UACW,aAAjBxG,EAAQ+G,KACF/G,EAAAuB,iBAAiB,UAAUtC,MAAOU,IAClC8B,MAAAA,EAAQ9B,EAAEkD,cAAcmE,QACxBxF,EAAQ,IAAIuB,YAAYqD,WAAWU,SAAU,CACjD7G,OAAQ,CACNkB,OACA4F,KAAM3D,YAAYC,KAClB5B,MAAAA,KAGJwB,SAASC,cAAc1B,EAAK,IAGN,UAAjBxB,EAAQ+G,KACP/G,EAAAuB,iBAAiB,UAAUtC,MAAOU,IAClC8B,MAAAA,EAAQ9B,EAAEkD,cAAcpB,MACxBD,EAAQ,IAAIuB,YAAYqD,WAAWU,SAAU,CACjD7G,OAAQ,CACNkB,OACA4F,KAAM3D,YAAYE,OAClB7B,MAAAA,KAGJwB,SAASC,cAAc1B,EAAK,IAGN,SAAjBxB,EAAQ+G,KACP/G,EAAAuB,iBAAiB,UAAUtC,MAAOU,IAClC8B,MAAAA,EAAQ9B,EAAEkD,cAAcpB,MACxBD,EAAQ,IAAIuB,YAAYqD,WAAWU,SAAU,CACjD7G,OAAQ,CACNkB,OACA4F,KAAM3D,YAAYG,OAClB9B,MAAAA,KAGJwB,SAASC,cAAc1B,EAAK,IAGtBxB,EAAAuB,iBAAiB,UAAUtC,MAAOU,IAClC8B,MAAAA,EAAQ9B,EAAEkD,cAAcpB,MACxBD,EAAQ,IAAIuB,YAAYqD,WAAWU,SAAU,CACjD7G,OAAQ,CACNkB,OACA4F,KAAM3D,YAAYE,OAClB7B,MAAAA,KAGJwB,SAASC,cAAc1B,EAAK,IAzFtC,CA6FA,CAKEyB,SAAS1B,iBAAiB6E,WAAWa,cAAchI,MAAOU,IACxD,MAAMwB,KAAEA,EAAMM,MAAAA,GAAU9B,EAAEM,OAEpBiG,EAAgBjD,SAASvC,iBAAiB,UAAUS,yBAC1D,IAAA,IAAQ+F,EAAI,EAAGA,EAAIhB,EAAcjB,OAAQiC,IACvC7B,gBAAgBG,iBAAiBU,EAAcgB,GAAI,CAAEzF,MAAAA,GAC3D,GACG,ICtIMwB,SAAA1B,iBAAiB,oBAAoBtC,UAQtC,MAAAkI,EAAYlE,SAASkC,uBAAuB,WAClD,IAAA,MAAWiC,KAAOD,EAAW,CAIrB,MAAAhG,EAAOiG,EAAIjB,aAAa,QACtBvG,QAAAmG,OAAO5E,EAAM,yBACf,MAAA4F,EAAOK,EAAIjB,aAAa,UAG1B,GAFIvG,QAAAmG,OAAOgB,EAAM,wBACrBnH,QAAQmG,OAAuB,QAAhBqB,EAAIZ,QAAmB,6BAClB,QAAhBY,EAAIZ,QACN,SAEI,MAAAa,EAAMD,EAAI3B,cAAc,UACtB7F,QAAAmG,OAAOsB,EAAK,gCACd,MAAAZ,EAASW,EAAI1G,iBAAiB,SACpCd,QAAQmG,OAAOU,EAAOxB,OAAS,EAAG,+BAG9BoC,EAAA9F,iBAAiB,SAAStC,MAAOU,IACnC,IAAI8B,EAAQ,CAAE,EAEPgF,EAAA9F,SAAS+F,IACR,MAAAY,EAAMZ,EAAMP,aAAa,OAE3B,IAAAoB,EADCD,IAGHC,EADe,YAAdb,EAAMK,KACSL,EAAMM,QACA,UAAdN,EAAMK,MAEQ,SAAdL,EAAMK,KADEzD,OAAOoD,EAAMjF,OAIbiF,EAAMjF,MAExBA,EAAQiC,MAAMQ,gBAAgBzC,EAAO6F,EAAKC,GAAa,IAEzD,MAAM/F,EAAQ,IAAIuB,YAAYqD,WAAWoB,QAAS,CAChDvH,OAAQ,CAAEkB,OAAM4F,OAAMtF,MAAAA,KAExBwB,SAASC,cAAc1B,EAAK,GAElC,KClDSyB,SAAA1B,iBAAiB,oBAAoBtC,UAOtCwI,MAAAA,EAAoBxE,SAASkC,uBAAuB,aAC1D,IAAA,MAAWnF,KAAWyH,EAAmB,CAIjC,MAAAtG,EAAOnB,EAAQmG,aAAa,QAC1BvG,QAAAmG,OAAO5E,EAAM,2BACf,MAAA4F,EAAO/G,EAAQmG,aAAa,UAG9B,GAFIvG,QAAAmG,OAAOgB,EAAM,6BACrBnH,QAAQmG,OAA2B,QAApB/F,EAAQwG,QAAmB,+BAClB,QAApBxG,EAAQwG,QACV,SAMF,MAAMhF,EAAQ,IAAIuB,YAAYqD,WAAWsB,UAAW,CAClDzH,OAAQ,CAAEkB,OAAM4F,UAElB9D,SAASC,cAAc1B,GAKnBxB,EAAQsG,aAAa,kBAMTjB,gBAAAC,iBAAiBtF,EAASqF,gBAAgBkB,cAC9D,CAKEtD,SAAS1B,iBAAiB6E,WAAWuB,iBAAiB1I,MAAOU,IAC3D,MAAMwB,KAAEA,EAAMM,MAAAA,GAAU9B,EAAEM,OACpB2H,EAAgB3E,SAASvC,iBAAiB,UAAUS,0BAC1D,IAAA,IAAQ+F,EAAI,EAAGA,EAAIU,EAAc3C,OAAQiC,IACvC7B,gBAAgBG,iBAAiBoC,EAAcV,GAAI,CAAEzF,MAAAA,GAC3D,GACG,ICrDG,MAAAoG,iBAAN,MAAMA,EAQJ,uBAAOvC,CAAiBtF,EAAS8H,GAC3BD,EAAgBE,gBAAgBC,IAAIhI,GACtC6H,EAAgBE,gBAAgBE,IAAIjI,GAASkI,KAAKJ,GAElDD,EAAgBE,gBAAgBI,IAAInI,EAAS,CAAC8H,GAEpD,CAOE,uBAAOtC,CAAiBxF,EAASD,GAC3B8H,EAAgBE,gBAAgBC,IAAIhI,IACtC6H,EAAgBE,gBAAgBE,IAAIjI,GAASW,SAASmH,IACpDA,EAAS,CAAE9H,aAAYD,GAAS,GAGxC,CAME,oBAAOwG,CAAcxG,GACnB,MAAMC,QAAEA,EAASyB,MAAAA,GAAU1B,EAC3B,OAAQC,EAAQwG,SACd,IAAK,MACaqB,EAAAO,iBAAiBpI,EAASyB,GAC1C,MACF,IAAK,SACaoG,EAAAQ,oBAAoBrI,EAASyB,GAC7C,MACF,IAAK,QACaoG,EAAAS,mBAAmBtI,EAASyB,GAC5C,MACF,IAAK,MACaoG,EAAAU,mBAAmBvI,EAASyB,GAC5C,MACF,QACE,MAAM,IAAI+G,MAAM,4BAA4BxI,EAAQwG,WAE5D,CAEE,uBAAO4B,CAAiBpI,EAASyB,GACvBzB,EAAAyI,aAAa,aAAchH,GAEnC,MAAMmB,EAAW5C,EAAQ4C,SACzB,IAAA,MAAWD,KAASC,EAEbD,EAAM2D,aAAa,QACxBuB,EAAgBtB,cAAc,CAC5BvG,QAAS2C,EACTlB,MAAOiC,MAAMC,aAAalC,EAAOkB,EAAMwD,aAAa,SAG5D,CAEE,yBAAOmC,CAAmBtI,EAASyB,GACZ,aAAjBzB,EAAQ+G,KAIS,UAAjB/G,EAAQ+G,KAIZ/G,EAAQyB,MAAQA,EAHNzB,EAAAgH,QAAUhH,EAAQyB,QAAUA,EAJpCzB,EAAQgH,QAAUvF,CASxB,CAEE,0BAAO4G,CAAoBrI,EAASyB,GAC5B,MAAAiH,EAAU1I,EAAQU,iBAAiB,UACzC,IAAA,IAASwG,EAAI,EAAGA,EAAIwB,EAAQzD,OAAQiC,IAClCwB,EAAQxB,GAAGyB,SAAWD,EAAQxB,GAAGzF,QAAUA,CAEjD,CAEE,yBAAO8G,CAAmBvI,EAASyB,GACjCzB,EAAQ4I,IAAMnH,CAClB,GAzFMoH,cAAAhB,iBACG,kBAAkB,IAAIiB,SAD/B,IAAMC,gBAANlB,iBA2FA1E,WAAWkC,gBAAkB0D,gBCxFtBC,OAAAzH,iBAAiB,UAAUtC,MAAOU,IACvC,IAAA,MAAWK,KAAWiJ,eACpBjD,IAAIkD,cAAclJ,EAAQmG,aAAa,SAEzC,IAAA,MAAWnG,KAAWyH,kBACpBzB,IAAImD,gBAAgBnJ,EAAQmG,aAAa,SAE3C,IAAA,MAAWnG,KAAWkG,cACpBF,IAAIoD,qBAAqBpJ,EAAQmG,aAAa,QAClD"}